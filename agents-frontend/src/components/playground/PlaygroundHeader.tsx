import { Button } from "@/components/button/Button";
import { LoadingSVG } from "@/components/button/LoadingSVG";
import { SettingsDropdown } from "@/components/playground/SettingsDropdown";
import { useConfig } from "@/hooks/useConfig";
import { ConnectionState } from "livekit-client";
import { ReactNode } from "react";

type PlaygroundHeader = {
  logo?: ReactNode;
  title?: ReactNode;
  githubLink?: string;
  height: number;
  accentColor: string;
  connectionState: ConnectionState;
  onConnectClicked: () => void;
};

export const PlaygroundHeader = ({
  logo,
  title,
  githubLink,
  accentColor,
  height,
  onConnectClicked,
  connectionState,
}: PlaygroundHeader) => {
  const { config } = useConfig();
  return (
    <div
      className={`flex gap-4 pt-4 text-${accentColor}-500 justify-between items-center shrink-0`}
      style={{
        height: height + "px",
      }}
    >
      <div className="flex items-center gap-3 basis-2/3">
        <div className="flex lg:basis-1/2">
          <a href="https://bain.com">{logo ?? <BainLogo />}</a>
        </div>
        <div className="lg:basis-1/2 lg:text-center text-xs lg:text-base lg:font-semibold text-white">
          {title}
        </div>
      </div>
      <div className="flex basis-1/3 justify-end items-center gap-2">
        {githubLink && (
          <a
            href={githubLink}
            target="_blank"
            className={`text-white hover:text-white/80`}
          >
            <GithubSVG />
          </a>
        )}
        {config.settings.editable && <SettingsDropdown />}
        <Button
          accentColor={
            connectionState === ConnectionState.Connected ? "red" : accentColor
          }
          disabled={connectionState === ConnectionState.Connecting}
          onClick={() => {
            onConnectClicked();
          }}
        >
          {connectionState === ConnectionState.Connecting ? (
            <LoadingSVG />
          ) : connectionState === ConnectionState.Connected ? (
            "Disconnect"
          ) : (
            "Connect"
          )}
        </Button>
      </div>
    </div>
  );
};

const LKLogo = () => (
  <svg
    width="28"
    height="28"
    viewBox="0 0 32 32"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <g clipPath="url(#clip0_101_119699)">
      <path
        d="M19.2006 12.7998H12.7996V19.2008H19.2006V12.7998Z"
        fill="currentColor"
      />
      <path
        d="M25.6014 6.40137H19.2004V12.8024H25.6014V6.40137Z"
        fill="currentColor"
      />
      <path
        d="M25.6014 19.2002H19.2004V25.6012H25.6014V19.2002Z"
        fill="currentColor"
      />
      <path d="M32 0H25.599V6.401H32V0Z" fill="currentColor" />
      <path d="M32 25.5986H25.599V31.9996H32V25.5986Z" fill="currentColor" />
      <path
        d="M6.401 25.599V19.2005V12.7995V6.401V0H0V6.401V12.7995V19.2005V25.599V32H6.401H12.7995H19.2005V25.599H12.7995H6.401Z"
        fill="white"
      />
    </g>
    <defs>
      <clipPath id="clip0_101_119699">
        <rect width="32" height="32" fill="white" />
      </clipPath>
    </defs>
  </svg>
);

const BainLogo = () => (
  
  <svg width="250" height="30" viewBox="0 0 178 21" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M178 9.92566C178 15.3772 173.63 19.7966 168.239 19.7966C162.848 19.7966 158.477 15.3772 158.477 9.92566C158.477 4.47407 162.848 0.0546875 168.239 0.0546875C168.751 0.0656228 169.263 0.108716 169.77 0.18372L168.941 1.28049H168.239C166.081 1.25296 164.001 2.09437 162.457 3.61926C160.913 5.14415 160.032 7.22731 160.009 9.40953C160.009 14.006 163.693 17.7321 168.239 17.7321C172.784 17.7321 176.469 14.006 176.469 9.40953C176.446 6.03837 174.363 3.03308 171.237 1.86114L170.918 0.5063C175.104 1.68044 178 5.53349 178 9.92566ZM171.684 10.4418L169.897 2.44178L164.985 8.8934L171.684 10.4418ZM77.4445 14.0626C76.3615 12.9675 75.7656 11.4741 75.7935 9.92566C75.7968 6.70967 78.3555 4.09352 81.5355 4.05469C83.083 4.00868 84.58 4.61464 85.6687 5.72779C86.7574 6.84095 87.34 8.36132 87.2774 9.92566C87.2774 13.1325 84.7067 15.7321 81.5355 15.7321C80.0042 15.7604 78.5274 15.1577 77.4445 14.0626ZM81.5993 5.92566C79.4301 5.92566 77.9627 7.86114 77.9627 9.92566C77.9627 12.2482 79.4301 13.9257 81.5993 13.8611C82.6042 13.8468 83.56 13.419 84.2462 12.6764C84.9324 11.9338 85.2897 10.9405 85.2358 9.92566C85.2358 7.53856 83.7685 5.92566 81.5993 5.92566ZM63.2251 9.92566C63.1653 11.4834 63.751 12.9957 64.841 14.098C65.9311 15.2003 67.4266 15.7926 68.967 15.7321C70.7031 15.7832 72.3515 14.9618 73.3692 13.5386L73.433 13.474L71.838 12.1192L71.7742 12.2482C71.2216 13.3247 70.1015 13.9792 68.9032 13.9257C66.7341 13.9257 65.2667 12.1837 65.2667 9.92566C65.213 8.9046 65.5685 7.90474 66.2528 7.15201C66.9371 6.39928 67.8926 5.9572 68.9032 5.92566C70.0659 5.94701 71.142 6.55156 71.7742 7.53856L71.838 7.60308L73.433 6.31275L73.3692 6.24824C72.2737 4.89453 70.633 4.11239 68.9032 4.1192C67.3851 4.11561 65.9291 4.72829 64.8616 5.81988C63.7941 6.91146 63.2046 8.39061 63.2251 9.92566ZM144.123 15.474V10.8289L140.103 4.37727H142.464L145.143 8.82888L147.951 4.37727H150.184L146.164 10.8289V15.474H144.123ZM106.8 15.474V4.37727H109.352C112.351 4.37727 113.946 5.73211 113.946 7.92566C113.946 10.2482 112.095 11.4095 109.416 11.4095C109.31 11.4095 109.205 11.39 109.11 11.3724C109.033 11.358 108.963 11.345 108.905 11.345V15.474H106.8ZM109.416 6.05469H108.905V9.60308C109.068 9.66517 109.243 9.68728 109.416 9.66759C111.075 9.66759 111.84 9.02243 111.84 7.86114C111.84 6.69985 111.138 6.05469 109.416 6.05469ZM96.3369 15.7966L92.8918 9.47404L91.6158 15.5386H89.5742L92.3176 4.18372L96.4007 11.6676L100.356 4.18372L103.227 15.474H101.058L99.7183 9.47404L96.3369 15.7966ZM36.557 10.9579L29.2839 4.18372V15.5386H31.2616V8.95791L38.5986 15.7966V4.37727H36.557V10.9579ZM22.3935 15.474V4.37727H24.4989V15.474H22.3935ZM14.3548 4.1192L19.714 15.474H17.4172L16.3964 13.0869H12.1857L11.1011 15.474H8.9957L14.3548 4.1192ZM14.3548 8.1192L12.9513 11.345H15.6308L14.3548 8.1192ZM6.76272 7.28049C6.77038 8.27988 6.19532 9.19008 5.29534 9.60308C6.53134 9.87969 7.42442 10.9688 7.46452 12.2482C7.46452 14.3128 5.93333 15.474 3.12616 15.474H0V4.37727H2.61577C5.23154 4.37727 6.76272 5.34501 6.76272 7.28049ZM5.29534 12.3128C5.29534 11.1515 4.46595 10.7644 2.99857 10.7644H2.10538V13.7966H2.99857C4.52975 13.7966 5.29534 13.345 5.29534 12.3128ZM2.10538 9.08695V6.05469H2.48817C4.01935 6.05469 4.78495 6.44178 4.78495 7.60307C4.78495 8.76436 4.01935 9.08695 2.55197 9.08695H2.10538ZM54.2932 15.5386H56.7176C56.7176 15.5386 54.8674 13.4095 54.5484 13.0224C54.8036 12.6998 56.3986 10.2482 56.3986 10.2482H54.4208L53.4638 11.7321L51.7412 9.73211C53.2086 8.95791 54.1018 7.86114 54.1018 6.69985C54.1018 5.15146 52.762 4.1192 51.0394 4.1192C49.1254 4.1192 47.8495 5.28049 47.8495 6.82888C47.9179 7.83139 48.3495 8.77316 49.0616 9.47404C47.9133 10.1192 46.8925 11.0869 46.8925 12.6998C46.8925 14.4418 48.2961 15.7966 50.3376 15.7966C51.5047 15.8169 52.6226 15.3223 53.4 14.4418L54.2932 15.5386ZM49.7634 6.8934C49.7527 6.54797 49.8837 6.21342 50.1253 5.96905C50.367 5.72467 50.6978 5.59222 51.0394 5.60307C51.3569 5.57735 51.6702 5.68914 51.9014 5.91062C52.1326 6.1321 52.2599 6.44244 52.2516 6.76436C52.2516 7.53856 51.486 8.1192 50.7204 8.5063C50.2026 8.11823 49.8584 7.53807 49.7634 6.8934ZM50.529 14.0547C51.2015 14.0639 51.8393 13.7533 52.2516 13.216L50.0824 10.6998H50.0186C49.3557 11.064 48.9227 11.7453 48.8703 12.5063C48.8628 12.9422 49.0396 13.3607 49.3565 13.6564C49.6733 13.9522 50.0999 14.0971 50.529 14.0547ZM128.3 4.18372L135.573 10.9579V4.37727H137.615V15.7966L130.342 8.95791V15.474H128.3V4.18372ZM120.262 4.1192L125.621 15.474H123.324L122.303 13.0869H118.092L117.008 15.474H114.903L120.262 4.1192ZM118.858 11.345H121.538L120.262 8.1192L118.858 11.345Z" fill="currentColor"/>
  </svg>
)


const GithubSVG = () => (
  <svg
    width="24"
    height="24"
    viewBox="0 0 98 96"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M48.854 0C21.839 0 0 22 0 49.217c0 21.756 13.993 40.172 33.405 46.69 2.427.49 3.316-1.059 3.316-2.362 0-1.141-.08-5.052-.08-9.127-13.59 2.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015 4.934.326 7.523 5.052 7.523 5.052 4.367 7.496 11.404 5.378 14.235 4.074.404-3.178 1.699-5.378 3.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283 0-5.378 1.94-9.778 5.014-13.2-.485-1.222-2.184-6.275.486-13.038 0 0 4.125-1.304 13.426 5.052a46.97 46.97 0 0 1 12.214-1.63c4.125 0 8.33.571 12.213 1.63 9.302-6.356 13.427-5.052 13.427-5.052 2.67 6.763.97 11.816.485 13.038 3.155 3.422 5.015 7.822 5.015 13.2 0 18.905-11.404 23.06-22.324 24.283 1.78 1.548 3.316 4.481 3.316 9.126 0 6.6-.08 11.897-.08 13.526 0 1.304.89 2.853 3.316 2.364 19.412-6.52 33.405-24.935 33.405-46.691C97.707 22 75.788 0 48.854 0z"
      fill="currentColor"
    />
  </svg>
);
